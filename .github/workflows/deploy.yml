name: Deploy HalalChain Marketplace

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    # Step 2: Set up Node.js environment
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    # Step 3: Debug environment
    - name: Debug environment
      run: |
        echo "Node version: $(node -v)"
        echo "NPM version: $(npm -v)"
        echo "Current directory: $(pwd)"
        ls -la

    # Step 4: Clean npm cache and node_modules
    - name: Clean npm cache and node_modules
      run: |
        npm cache clean --force
        rm -rf node_modules package-lock.json

    # Step 5: Install dependencies with clean slate
    - name: Install dependencies
      run: npm install
      continue-on-error: false

    # Step 6: Create .env file
    - name: Create .env file
      run: |
        echo "NEXT_PUBLIC_SITE_URL=${{ secrets.NEXT_PUBLIC_SITE_URL }}" > .env
        echo "NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL }}" >> .env
        echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> .env

    # Step 7: Debug dependencies
    - name: Debug dependencies
      run: |
        echo "Checking for required dependencies..."
        npm list react-markdown || echo "react-markdown is not installed"
        npm list next || echo "next is not installed"
        npm list openai || echo "openai is not installed"
        npm list @next/mdx || echo "@next/mdx is not installed"
        npm list remark-gfm || echo "remark-gfm is not installed"

    # Step 8: Install additional dependencies if needed
    - name: Install additional dependencies
      run: |
        npm install react-markdown @next/mdx remark-gfm

    # Step 9: Build the project with verbose output
    - name: Build the project
      run: npm run build
      env:
        NEXT_PUBLIC_SITE_URL: ${{ secrets.NEXT_PUBLIC_SITE_URL }}
        NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        NODE_OPTIONS: "--max-old-space-size=4096"

    # Step 10: Deploy to Vercel
    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v20
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        vercel-args: '--prod'
        working-directory: ./

    # Step 11: Post-deployment verification
    - name: Verify deployment
      run: curl -I ${{ secrets.NEXT_PUBLIC_SITE_URL || 'https://halal-chain.com' }}
      continue-on-error: true

    # Step 12: Create GitHub release for tags
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}