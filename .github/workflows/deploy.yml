name: Deploy HalalChain Marketplace

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build
      run: |
        # Fix for QR code import issue
        npm install qrcode.react@latest --save
        npm run build
      env:
        CI: false # Prevents build from failing on warnings
    
    - name: Run tests
      run: |
        if [ -f package.json ] && grep -q '"test":' package.json; then
          npm test
        else
          echo "No tests specified"
        fi
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-output
        path: .next/

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: ${{ github.ref_name == 'main' }}
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-output
        path: .next/
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: |
          halalchain/marketplace:latest
          halalchain/marketplace:${{ github.sha }}
        cache-from: type=registry,ref=halalchain/marketplace:latest
        cache-to: type=inline
    
    - name: Deploy to production
      run: |
        echo "Deploying to production server..."
        # Replace with actual deployment commands
        # ssh user@your-server "cd /path/to/app && docker-compose pull && docker-compose up -d"
        echo "Deployment complete!"

  notify:
    needs: deploy
    runs-on: ubuntu-latest
    
    steps:
    - name: Send deployment notification
      run: |
        echo "Sending deployment notification..."
        # Add notification commands here
        echo "Notification sent!"
        
    - name: Update deployment status
      run: |
        echo "Updating deployment status..."
        echo "HalalChain Marketplace v0.4.0 deployed successfully with supply chain tracking and expanded regional coverage."
        echo "Regions: ASEAN, China, Russia, Australia, UAE/Dubai, GCC"